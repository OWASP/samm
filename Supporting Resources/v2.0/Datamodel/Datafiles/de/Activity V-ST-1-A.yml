---
#===========================================================
#OWASP SAMM Activity Description
#===========================================================
#Link to the stream that this activity belongs to
stream: 102fdab651834273abd67a3ec27aab05
#Link to the practice level that this activity belongs to
level: d6cefe3e63d149299fb088010c24778b
#Unique identifier (GUID) used to refer to this activity.
#Please generate another identifier for your specific activity.
id: 921ff24f0b9f4df9a5129aa2f8a4a570
#The title of this activity
title: Automatisierte Sicherheitstests durchführen
#Describe the benefit that is achieved by implementing this activity
benefit: Erkennung allgemeiner, leicht zu findender Sicherheitslücken
#A one sentence description of the activity
shortDescription: Einsatz automatisierter Sicherheitstests
#A multi-paragraph description of the activity
longDescription: |
  Einsatz von automatisierten statischen und dynamischen Sicherheitstests für Software, was zu effizienteren Sicherheitstests und qualitativ besseren Ergebnissen führt. Erhöhen Sie schrittweise die Häufigkeit der Sicherheitstests und erweitern Sie die Codeabdeckung.

  Sicherheitstests für Anwendungen können statisch durchgeführt werden, indem der Quellcode einer Anwendung untersucht wird, ohne dass sie ausgeführt wird, oder dynamisch, indem einfach das Verhalten der Anwendung als Reaktion auf verschiedene Eingabebedingungen beobachtet wird. Der erste Ansatz wird oft als statische Anwendungssicherheitsprüfung (SAST) bezeichnet, der zweite als dynamische Anwendungssicherheitsprüfung (DAST). Ein hybrider Ansatz, bekannt als Interactive Application Security Testing (IAST), kombiniert die Stärken beider Ansätze (auf Kosten eines zusätzlichen Aufwands), indem automatisch instrumentierte Anwendungen dynamisch getestet werden, was eine genaue Überwachung des internen Zustands der Anwendung als Reaktion auf externe Eingaben ermöglicht.

  Viele Sicherheitsschwachstellen lassen sich ohne eine sorgfältige Inspektion des Quellcodes nur sehr schwer erkennen. Obwohl dies idealerweise durch Experten oder Peer-Reviews geschieht, ist dies eine langsame und teure Aufgabe. Automatisierte SAST-Tools sind zwar "lauter" und häufig weniger genau als von Experten durchgeführte Prüfungen, aber billiger, viel schneller und konsistenter als Menschen. Eine Reihe kommerzieller und kostenloser Tools ist in der Lage, hinreichend wichtige Fehler und Schwachstellen in großen Codebasen effizient zu erkennen.

  Dynamische Tests erfordern keinen Anwendungsquellcode, was sie ideal für Fälle macht, in denen kein Quellcode verfügbar ist. Es identifiziert auch konkrete Schwachstellen. Aufgrund seines "Black-Box"-Ansatzes, ohne Instrumentierung, ist es wahrscheinlicher, dass er nur oberflächliche Fehler aufdeckt. Dynamische Testwerkzeuge benötigen eine große Quelle von Testdaten, deren manuelle Erstellung unerschwinglich ist. Es gibt viele Tools, die geeignete Testdaten automatisch generieren, was zu effizienteren Sicherheitstests und qualitativ besseren Ergebnissen führt.

  Die Auswahl geeigneter Tools basiert auf mehreren Faktoren, darunter Tiefe und Genauigkeit der Prüfung, Robustheit und Genauigkeit der Sicherheitstestfälle, verfügbare Integrationen mit anderen Tools, Nutzungs- und Kostenmodell usw. Bei der Auswahl der Tools sollten Sie die Meinung von sicherheitsbewussten technischen Mitarbeitern sowie von Entwicklern und Entwicklungsleitern einholen und die Ergebnisse mit den Beteiligten besprechen.
#The output of this particular activity
results:
#The different metrics that can be used to measure the success of the activity
metrics:
#A description of the costs required to implement the activity
costs:
#The (standard) roles involved in the implementation of this activity
personnel:
#Internal notes that might help the author
notes:
#References to other activities that are prerequesites to implement this one.
dependencies:
#Type Classification of the Document
type: Aktivitäten
