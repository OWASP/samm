---
#===========================================================
#OWASP SAMM Activity Description
#===========================================================
#Link to the stream that this activity belongs to
stream: 8a64c7b0b35a458ea436260d5e414dfa
#Link to the practice level that this activity belongs to
level: d6cefe3e63d149299fb088010c24778b
#Unique identifier (GUID) used to refer to this activity.
#Please generate another identifier for your specific activity.
id: b3b20a75740c4880a21ad9aa0c1298c7
#The title of this activity
title: Manuelles Testen von Anwendungskomponenten mit hohem Risiko
#Describe the benefit that is achieved by implementing this activity
benefit: Manuelles Testen von Anwendungskomponenten mit hohem Risiko
#A one sentence description of the activity
shortDescription: Durchführung manueller Sicherheitstests von Komponenten mit hohem Risiko
#A multi-paragraph description of the activity
longDescription: |
  Führen Sie selektive manuelle Sicherheitstests durch, möglicherweise unter Verwendung einer Kombination aus statischen und dynamischen Analysetools, um die Überprüfung zu lenken oder zu fokussieren, damit Sie als Angreifer Teile der Anwendung gründlicher analysieren können. Automatisierte Tools sind bei der Suche nach verschiedenen Arten von Schwachstellen effektiv, können aber niemals die manuelle Überprüfung durch Experten ersetzen.

  Schwachstellen auf Code-Ebene in sicherheitskritischen Teilen der Software können drastische Auswirkungen haben, so dass Projektteams risikoreiche Module auf häufige Schwachstellen überprüfen. Zu den gängigen Beispielen für risikoreiche Funktionen gehören Authentifizierungsmodule, Zugriffskontrollpunkte, Sitzungsverwaltungssysteme, externe Schnittstellen sowie Eingabevalidierer und Datenparser. Die Teams können Metriken auf Code-Ebene und gezielte automatische Scans kombinieren, um festzustellen, wo sie ihre Bemühungen am besten konzentrieren sollten. In der Praxis kann diese Tätigkeit viele Formen annehmen, z. B. Pair Programming und Peer Review, zeitlich begrenzte Sicherheits-"Pushs", an denen das gesamte Entwicklungsteam beteiligt ist, oder spontane unabhängige Überprüfungen durch Mitglieder einer spezialisierten Sicherheitsgruppe.

  Während der Entwicklungszyklen, in denen risikoreicher Code geändert und überprüft wird, ordnen die Entwicklungsmanager die Ergebnisse ein und legen die Prioritäten für Abhilfemaßnahmen fest, wobei auch andere Projektbeteiligte einbezogen werden.
#The output of this particular activity
results:
#The different metrics that can be used to measure the success of the activity
metrics:
#A description of the costs required to implement the activity
costs:
#The (standard) roles involved in the implementation of this activity
personnel:
#Internal notes that might help the author
notes:
#References to other activities that are prerequesites to implement this one.
dependencies:
#Type Classification of the Document
type: Aktivitäten
